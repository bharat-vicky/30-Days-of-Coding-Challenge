Given an input string s, reverse the order of the words.
A word is defined as a sequence of non-space characters. The words in s will be separated by at least one space.
Return a string of the words in reverse order concatenated by a single space.
Note that s may contain leading or trailing spaces or multiple spaces between two words. The returned string should only have a single space separating the words. Do not include any extra spaces.
.................................................................................................................................
class Solution {
public:
    string reverseWords(string s) {
        
        string trimmed;
        int n = s.size();
        int i = 0;

        
        while (i < n && s[i] == ' ') i++;

        
        while (i < n) {
            if (s[i] != ' ') {
                trimmed += s[i];
            } else if (!trimmed.empty() && trimmed.back() != ' ') {
                trimmed += ' ';
            }
            i++;
        }

        
        if (!trimmed.empty() && trimmed.back() == ' ') {
            trimmed.pop_back();
        }

        
        vector<string> words;
        string word;
        for (char c : trimmed) {
            if (c == ' ') {
                if (!word.empty()) {
                    words.push_back(word);
                    word.clear();
                }
            } else {
                word += c;
            }
        }
        if (!word.empty()) words.push_back(word);

        
        reverse(words.begin(), words.end());

        
        string result;
        for (int i = 0; i < words.size(); i++) {
            result += words[i];
            if (i != words.size() - 1) result += ' ';
        }

        return result;
    }
};

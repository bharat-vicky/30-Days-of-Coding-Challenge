Problem statement
You have been given an array ‘a’ of ‘n’ non-negative integers.You have to check whether the given array is sorted in the non-decreasing order or not.
Your task is to return 1 if the given array is sorted. Else, return 0.
Example :
Input: ‘n’ = 5, ‘a’ = [1, 2, 3, 4, 5]
Output: 1
The given array is sorted in non-decreasing order; hence the answer will be 1.

..................................................................................................................................................................................

int isSorted(int n, vector<int> a) {
    for(int i = 1; i < n; i++) {
        if(a[i] >= a[i-1]){

        }
        else {
            return false;
        }
    }
    return true;
}

..................................................................................................................................................................................
..................................................................................................................................................................................

Problem statement
You are given a sorted integer array 'arr' of size 'n'.
You need to remove the duplicates from the array such that each element appears only once.
Return the length of this new array.
Note:
Do not allocate extra space for another array. You need to do this by modifying the given input array in place with O(1) extra memory. 
For example:
'n' = 5, 'arr' = [1 2 2 2 3].
The new array will be [1 2 3].
So our answer is 3.

..................................................................................................................................................................................

int removeDuplicates(vector<int> &arr, int n) {
	int i=0;
	for(int j=1; j<n; j++) {
		if(arr[i] != arr[j]) {
			arr[i+1] = arr[j];
			i++;
		}
	}
	return i+1;
}

Given a string s, sort it in decreasing order based on the frequency of the characters. The frequency of a character is the number of times it appears in the string.
Return the sorted string. If there are multiple answers, return any of them.
..........................................................................................................
#include <string>
#include <unordered_map>
#include <vector>
#include <algorithm>

using namespace std;

class Solution {
public:
    string frequencySort(string s) {
       
        unordered_map<char, int> freqMap;
        for (char c : s) {
            freqMap[c]++;
        }
        
        
        vector<pair<char, int>> freqVec(freqMap.begin(), freqMap.end());
        
        
        sort(freqVec.begin(), freqVec.end(), [](pair<char, int>& a, pair<char, int>& b) {
            return a.second > b.second;
        });
        
        
        string result;
        for (auto& [ch, freq] : freqVec) {
            result.append(freq, ch); 
        }
        
        return result;
    }
};

 

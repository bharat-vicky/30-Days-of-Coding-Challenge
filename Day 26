Given an array arr containing both positive and negative integers, the task is to compute the length of the largest subarray that has a sum of 0.

........................................................................................................................................................


#include <unordered_map>
#include <vector>
using namespace std;

class Solution {
public:
    int maxLen(vector<int>& arr) {
        unordered_map<int, int> prefixSumMap; 
        int maxLength = 0;
        int prefixSum = 0;

        for (int i = 0; i < arr.size(); i++) {
            prefixSum += arr[i]; 

            
            if (prefixSum == 0) {
                maxLength = i + 1;
            }

            
            if (prefixSumMap.find(prefixSum) != prefixSumMap.end()) {
                maxLength = max(maxLength, i - prefixSumMap[prefixSum]);
            } else {
                
                prefixSumMap[prefixSum] = i;
            }
        }

        return maxLength;
    }
};
